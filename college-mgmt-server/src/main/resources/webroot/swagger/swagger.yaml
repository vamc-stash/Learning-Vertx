openapi: "3.0.0"
info:
  version: 1.0.0
  title: College Sever API
  license:
    name: MIT
servers:
  - url: http://locahost:8080
paths:
  /ping:
    get:
      summary: server test api
      operationId: ping
      tags:
        - ping
      responses:
        '200':
          description: 'College Server is running'

  /api/v1/auth/signup:
    post:
      summary: 'signup api for Admin'
      operationId: 'sign-up'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User Sign Up is success
        400:
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
  /api/v1/auth/signin:
    post:
      summary: 'sign in api for Admin'
      operationId: 'sign-in'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User Sign Up is success
        400:
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
  /api/v1/auth/ping:
    get:
      summary: 'test api for sign in verification'
      operationId: 'sign-in-ping'
      parameters:
        - in: header
          name: AUTH_TOKEN
          schema:
            type: string
          required: true
      responses:
        200:
          description: 'user is authorised'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserJwtResponse'
        400:
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'


components:
  schemas:
    ErrorResponse:
      properties:
        code:
          description: 'Error Code denoting the cause of failure'
          type: integer
        message:
          description: 'Error Message denoting the cause of failure'
          type: string

    ErrorResponse500:
      properties:
        code:
          description: 'Error Code denoting the cause of failure. 500: Internal Processing Error.'
          type: integer
        message:
          description: 'Error Message denoting the cause of failure'
          type: string

    User:
      type: object
      required: ['email', 'password']
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        email:
          type: string
        password:
          type: string
          minLength: 6
    UserJwtResponse:
      type: object
      properties:
        role_id:
          type: integer
        user_id:
          type: string
        access_token:
          type: string
        iss:
          type: string
        sub:
          type: string